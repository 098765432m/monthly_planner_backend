// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: task_categories.queries.sql

package task_category_repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTaskCategory = `-- name: CreateTaskCategory :one
INSERT INTO task_categories (name, description, month_id)
VALUES ($1, $2, $3)
RETURNING id
`

type CreateTaskCategoryParams struct {
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
	MonthID     pgtype.UUID `json:"month_id"`
}

func (q *Queries) CreateTaskCategory(ctx context.Context, arg CreateTaskCategoryParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createTaskCategory, arg.Name, arg.Description, arg.MonthID)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}

const deleteTaskCategory = `-- name: DeleteTaskCategory :exec
DELETE FROM task_categories WHERE id = $1::UUID
`

func (q *Queries) DeleteTaskCategory(ctx context.Context, id pgtype.UUID) error {
	_, err := q.db.Exec(ctx, deleteTaskCategory, id)
	return err
}
