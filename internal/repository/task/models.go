// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package task_repository

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type TaskStatusEnum string

const (
	TaskStatusEnumNOTDONE TaskStatusEnum = "NOT_DONE"
	TaskStatusEnumDONE    TaskStatusEnum = "DONE"
)

func (e *TaskStatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TaskStatusEnum(s)
	case string:
		*e = TaskStatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for TaskStatusEnum: %T", src)
	}
	return nil
}

type NullTaskStatusEnum struct {
	TaskStatusEnum TaskStatusEnum
	Valid          bool // Valid is true if TaskStatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTaskStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.TaskStatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TaskStatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTaskStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TaskStatusEnum), nil
}

type Day struct {
	ID        pgtype.UUID
	Date      pgtype.Date
	DayOfWeek int32
	MonthID   pgtype.UUID
}

type Month struct {
	ID        pgtype.UUID
	Year      int32
	Month     int32
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
}

type Task struct {
	ID          pgtype.UUID
	Name        string
	Description pgtype.Text
	Status      TaskStatusEnum
	TimeStart   pgtype.Time
	TimeEnd     pgtype.Time
	DayID       pgtype.UUID
}
